{"ast":null,"code":"import _objectSpread from\"/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var API=\"https://safe-fjord-18355.herokuapp.com/\";var teamsAPI=API+\"teams/\";var loadTeams=function loadTeams(teams){return{type:\"LOAD_TEAMS\",teams:teams};};var addTeam=function addTeam(team){return{type:\"ADD_TEAM\",team:team};};var removeTeam=function removeTeam(team){return{type:\"DELETE_TEAM\",team:team};};var removeTeamFromCollaborators=function removeTeamFromCollaborators(team){return{type:\"DELETE_TEAM_FROM_COLLABORATORS\",team:team};};export var fetchTeams=function fetchTeams(){return function(dispatch){return fetch(teamsAPI).then(function(resp){return resp.json();}).then(function(teams){return dispatch(loadTeams(teams));});};};export var createTeam=function createTeam(team,history){return function(dispatch){var body={team:team};return fetch(teamsAPI,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Accept\":\"application/json\"},body:JSON.stringify(body)}).then(function(r){return r.json();}).then(function(newTeam){if(!newTeam.id){alert(JSON.stringify(newTeam));}else{dispatch(addTeam(_objectSpread(_objectSpread({},newTeam),{},{collaborators:[]})));history.push('/teams');}});};};export var deleteTeam=function deleteTeam(team){return function(dispatch){return fetch(teamsAPI+team.id,{method:\"DELETE\"}).then(dispatch(removeTeam(team))).then(dispatch(removeTeamFromCollaborators(team)));};};","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/actions/teams.js"],"names":["API","teamsAPI","loadTeams","teams","type","addTeam","team","removeTeam","removeTeamFromCollaborators","fetchTeams","dispatch","fetch","then","resp","json","createTeam","history","body","method","headers","JSON","stringify","r","newTeam","id","alert","collaborators","push","deleteTeam"],"mappings":"8LAAA,GAAMA,CAAAA,GAAG,CAAG,yCAAZ,CACA,GAAMC,CAAAA,QAAQ,CAAGD,GAAG,CAAG,QAAvB,CAEA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,QAAK,CAAEC,IAAI,CAAE,YAAR,CAAsBD,KAAK,CAALA,KAAtB,CAAL,EAAvB,CAEA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,QAAK,CAAEF,IAAI,CAAE,UAAR,CAAoBE,IAAI,CAAJA,IAApB,CAAL,EAApB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAD,IAAI,QAAK,CAAEF,IAAI,CAAE,aAAR,CAAuBE,IAAI,CAAJA,IAAvB,CAAL,EAAvB,CAEA,GAAME,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAAAF,IAAI,QAAK,CAACF,IAAI,CAAE,gCAAP,CAAyCE,IAAI,CAAJA,IAAzC,CAAL,EAAxC,CAEA,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,MAAO,UAAAC,QAAQ,CAAI,CACjB,MAAOC,CAAAA,KAAK,CAACV,QAAD,CAAL,CACJW,IADI,CACC,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,EAAJ,EADL,EAEJF,IAFI,CAEC,SAAAT,KAAK,QACTO,CAAAA,QAAQ,CAACR,SAAS,CAACC,KAAD,CAAV,CADC,EAFN,CAAP,CAKD,CAND,CAOD,CARM,CAUP,MAAO,IAAMY,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACT,IAAD,CAAMU,OAAN,CAAkB,CAC1C,MAAO,UAAAN,QAAQ,CAAI,CACjB,GAAMO,CAAAA,IAAI,CAAG,CACXX,IAAI,CAAJA,IADW,CAAb,CAGA,MAAOK,CAAAA,KAAK,CAACV,QAAD,CAAW,CACrBiB,MAAM,CAAE,MADa,CAErBC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,SAAU,kBAFH,CAFY,CAMrBF,IAAI,CAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CANe,CAAX,CAAL,CAQJL,IARI,CAQC,SAAAU,CAAC,QAAIA,CAAAA,CAAC,CAACR,IAAF,EAAJ,EARF,EASJF,IATI,CASC,SAAAW,OAAO,CAAI,CACf,GAAI,CAACA,OAAO,CAACC,EAAb,CAAiB,CACfC,KAAK,CAACL,IAAI,CAACC,SAAL,CAAeE,OAAf,CAAD,CAAL,CACD,CAFD,IAEO,CACLb,QAAQ,CAACL,OAAO,gCACXkB,OADW,MAEdG,aAAa,CAAE,EAFD,GAAR,CAAR,CAIAV,OAAO,CAACW,IAAR,CAAa,QAAb,EACD,CACF,CAnBI,CAAP,CAoBD,CAxBD,CAyBD,CA1BM,CA4BP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAtB,IAAI,CAAI,CAChC,MAAO,UAAAI,QAAQ,CAAI,CACjB,MAAOC,CAAAA,KAAK,CAACV,QAAQ,CAAGK,IAAI,CAACkB,EAAjB,CAAqB,CAC/BN,MAAM,CAAE,QADuB,CAArB,CAAL,CAGNN,IAHM,CAGDF,QAAQ,CAACH,UAAU,CAACD,IAAD,CAAX,CAHP,EAINM,IAJM,CAIDF,QAAQ,CAACF,2BAA2B,CAACF,IAAD,CAA5B,CAJP,CAAP,CAKD,CAND,CAOD,CARM","sourcesContent":["const API = \"https://safe-fjord-18355.herokuapp.com/\"\nconst teamsAPI = API + \"teams/\"\n\nconst loadTeams = teams => ({ type: \"LOAD_TEAMS\", teams })\n\nconst addTeam = team => ({ type: \"ADD_TEAM\", team })\n\nconst removeTeam = team => ({ type: \"DELETE_TEAM\", team })\n\nconst removeTeamFromCollaborators = team => ({type: \"DELETE_TEAM_FROM_COLLABORATORS\", team })\n\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(teamsAPI)\n      .then(resp => resp.json())\n      .then(teams => \n        dispatch(loadTeams(teams))\n      )\n  }\n}\n\nexport const createTeam = (team,history) => {\n  return dispatch => {\n    const body = {\n      team\n    }\n    return fetch(teamsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newTeam => {\n        if (!newTeam.id) {\n          alert(JSON.stringify(newTeam))\n        } else {\n          dispatch(addTeam({\n            ...newTeam,\n            collaborators: []\n          }))\n          history.push('/teams')\n        }\n      })\n  }\n}\n\nexport const deleteTeam = team => {\n  return dispatch => {\n    return fetch(teamsAPI + team.id, {\n      method: \"DELETE\"\n    })\n    .then(dispatch(removeTeam(team)))\n    .then(dispatch(removeTeamFromCollaborators(team)))\n  }\n}"]},"metadata":{},"sourceType":"module"}