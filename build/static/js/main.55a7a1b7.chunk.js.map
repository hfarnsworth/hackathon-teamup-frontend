{"version":3,"sources":["components/NavBar.js","components/About.js","actions/teams.js","components/ErrorMessage.js","components/NewTeam.js","actions/collaborators.js","components/NewCollaborator.js","components/TeamMembers.js","components/Team.js","components/SideTeams.js","containers/TeamsContainer.js","components/TeamSelect.js","actions/teamMembers.js","components/MemberTeams.js","components/Collaborator.js","components/SideCollabos.js","containers/CollaboratorsContainer.js","App.js","reducers/rootReducer.js","reducers/teams.js","reducers/collaborators.js","serviceWorker.js","index.js"],"names":["NavBar","className","exact","to","About","teamsAPI","API","ErrorMessage","error","NewTeam","state","name","description","handleOnChange","e","setState","target","value","handleOnSubmit","preventDefault","teamExists","props","teams","filter","team","toLowerCase","length","createTeam","history","this","onSubmit","type","onChange","Component","withRouter","connect","dispatch","body","fetch","method","headers","JSON","stringify","then","r","json","newTeam","id","addTeam","collaborators","push","alert","collaboratorsAPI","NewCollaborator","role","skills","createCollaborator","collaborator","newCollaborator","addCollaborator","TeamMembers","map","key","Team","SideTeams","deleteTeam","teamLinks","onClick","handleDeleteClick","TeamsContainer","path","render","routerProps","find","parseInt","match","params","React","removeTeam","removeTeamFromCollaborators","TeamSelect","handleChange","bind","handleSubmit","availableTeams","createTeamMember","index","team_id","collaborator_id","teamMember","collaboratorID","addTeamToMember","teamID","addMemberToTeam","MemberTeams","Collaborator","id1","some","SideCollabos","deleteCollaborator","collaboratorLinks","CollaboratorsContainer","count","handleOnClick","resp","data","console","log","catch","errors","removeCollaborator","removeCollaboratorFromTeams","App","fetchCollaborators","fetchTeams","from","component","loadCollaborators","loadTeams","combineReducers","idx","action","concat","findIndex","slice","forEach","Boolean","window","location","hostname","createBrowserHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55a7a1b7.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst NavBar = () => {\n  return (\n    <div className=\"NavBar\">\n      <NavLink exact to=\"/\">About</NavLink>\n      <NavLink exact to=\"/teams\"> Teams </NavLink>\n      <NavLink exact to=\"/newTeam\"> New Team </NavLink>\n      <NavLink exact to=\"/collaborators\"> Collaborators </NavLink>\n      <NavLink exact to=\"/newCollaborator\"> New Collaborator </NavLink>\n    </div>\n  )\n}\n\nexport default NavBar;","import React from 'react'\n\nconst About = () => {\n  return (\n    <div className=\"About\">\n      <h2>Welcome to Hackathon Teamup</h2>\n      <h1>Organize your event by registering teams and event participants.  Teams can fill their ranks by finding participants who have the skills they're looking for.</h1>\n    </div>\n  )\n}\n\nexport default About;","const API = \"https://safe-fjord-18355.herokuapp.com/\"\nconst teamsAPI = API + \"teams/\"\n\nconst loadTeams = teams => ({ type: \"LOAD_TEAMS\", teams })\n\nconst addTeam = team => ({ type: \"ADD_TEAM\", team })\n\nconst removeTeam = team => ({ type: \"DELETE_TEAM\", team })\n\nconst removeTeamFromCollaborators = team => ({type: \"DELETE_TEAM_FROM_COLLABORATORS\", team })\n\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(teamsAPI)\n      .then(resp => resp.json())\n      .then(teams => \n        dispatch(loadTeams(teams))\n      )\n  }\n}\n\nexport const createTeam = (team,history) => {\n  return dispatch => {\n    const body = {\n      team\n    }\n    return fetch(teamsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newTeam => {\n        if (!newTeam.id) {\n          alert(JSON.stringify(newTeam))\n        } else {\n          dispatch(addTeam({\n            ...newTeam,\n            collaborators: []\n          }))\n          history.push('/teams')\n        }\n      })\n  }\n}\n\nexport const deleteTeam = team => {\n  return dispatch => {\n    return fetch(teamsAPI + team.id, {\n      method: \"DELETE\"\n    })\n    .then(dispatch(removeTeam(team)))\n    .then(dispatch(removeTeamFromCollaborators(team)))\n  }\n}","import React from 'react';\n\nconst ErrorMessage = ({ error }) => {\n  return (\n    error \n      ?\n        <div className=\"error\">\n          &#9888;{error}&#9888;\n        </div>\n      :\n      <div></div>\n  )\n}\n\nexport default ErrorMessage","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { createTeam } from '../actions/teams';\nimport { withRouter } from 'react-router-dom';\nimport ErrorMessage from './ErrorMessage.js';\n\nclass NewTeam extends Component {\n  state = {\n    name: '',\n    description: '',\n    error: '',\n  };\n\n  handleOnChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      error: '',\n    })\n    const teamExists = this.props.teams.filter(team =>\n      team.name.toLowerCase() === this.state.name.toLowerCase())\n    if (this.state.name === ''|| this.state.description === '') {\n      this.setState({\n        error: \"field(s) must not be left blank\"\n      })\n    } else if (teamExists.length) {\n      this.setState({\n        error: \"only one team may use this name\"\n      })\n    } else {\n      this.props.createTeam({\n        name: this.state.name,\n        description: this.state.description\n      },this.props.history)\n      this.setState({\n        name: '',\n        description: ''\n      })\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"newTeam\">\n        <h2>New Team</h2>\n        <ErrorMessage error={this.state.error} />\n        <form onSubmit={this.handleOnSubmit} >\n          <p><label>Team Name:</label><input name=\"name\" type=\"text\" onChange={this.handleOnChange} value={this.state.name} /></p>\n          <p><label>Project Description:</label><input name=\"description\" type=\"text\" onChange={this.handleOnChange} value={this.state.description} /></p>\n          <input type=\"submit\" onSubmit={this.handleOnSubmit} />\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ teams }) => ({ teams })\n\nexport default withRouter(connect(mapStateToProps,{ createTeam })(NewTeam))","const API = \"https://safe-fjord-18355.herokuapp.com/\"\nconst collaboratorsAPI = API + \"collaborators/\"\n\nconst loadCollaborators = collaborators => ({ type: \"LOAD_COLLABORATORS\", collaborators })\n\nconst addCollaborator = collaborator => ({ type: \"ADD_COLLABORATOR\", collaborator })\n\nconst removeCollaborator = collaborator => ({type: \"DELETE_COLLABORATOR\", collaborator })\n\nconst removeCollaboratorFromTeams = collaborator => ({type: \"DELETE_COLLABORATOR_FROM_TEAMS\", collaborator })\n\nexport const fetchCollaborators = () => {\n  return dispatch => {\n    return fetch(collaboratorsAPI)\n      .then(resp => resp.json())\n      .then(collaborators => \n        dispatch(loadCollaborators(collaborators))\n      )\n  }\n}\n\nexport const createCollaborator = (collaborator,history) => {\n  return dispatch => {\n    const body = {\n      collaborator\n    }\n    return fetch(collaboratorsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newCollaborator => {\n        if (!newCollaborator.id) {\n          alert(JSON.stringify(newCollaborator))\n        } else {\n          dispatch(addCollaborator({\n            ...newCollaborator,\n            teams: [],\n          }))\n          history.push('/collaborators')\n        }\n      })\n  }\n}\n\nexport const deleteCollaborator = collaborator => {\n  return dispatch => {\n    return fetch(collaboratorsAPI + collaborator.id, {\n      method: \"DELETE\"\n    })\n    .then(dispatch(removeCollaborator(collaborator)))\n    .then(dispatch(removeCollaboratorFromTeams(collaborator)))\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { createCollaborator } from '../actions/collaborators';\nimport { withRouter } from 'react-router-dom';\nimport ErrorMessage from './ErrorMessage.js';\n\n\nclass NewCollaborator extends Component {\n  state = {\n    name: '',\n    role: '',\n    skills: '',\n    error: '',\n  };\n\n  handleOnChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      error: '',\n    })\n    if ( !this.state.name || !this.state.role || !this.state.skills ) {\n      this.setState({\n        error: \"field(s) must not be left blank\"\n      })\n    } else {\n      this.props.createCollaborator(this.state,this.props.history)\n      this.setState({\n        name: '',\n        role: '',\n        skills: ''\n      })\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"newCollaborator\">\n        <h2>New Collaborator</h2>\n        <ErrorMessage error={this.state.error} />\n        <form onSubmit={this.handleOnSubmit} >\n          <p><label>Name:</label><input name=\"name\" type=\"text\" onChange={this.handleOnChange} value={this.state.name} /></p>\n          <p><label>Role:</label><input name=\"role\" type=\"text\" onChange={this.handleOnChange} value={this.state.role} /></p>\n          <p><label>Skills:</label><input name=\"skills\" type=\"text\" onChange={this.handleOnChange} value={this.state.skills} /></p>\n          <input type=\"submit\" onSubmit={this.handleOnSubmit} />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(null,{ createCollaborator })(NewCollaborator))","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst TeamMembers = ({ collaborators }) => {\n  return (\n    collaborators.length\n      ? <div className=\"TeamMembers\">\n        <p>Team Members</p>\n          <ul>{collaborators.map ( collaborator =>\n            <li key={collaborator.id}>\n              <Link key={collaborator.id} to={`/collaborators/${collaborator.id}`}>{collaborator.name}</Link>\n            </li>\n          )}</ul>\n        </div>\n      : <h3>...No Members Yet...</h3>\n  )\n}\n\nexport default TeamMembers","import React from 'react'\nimport TeamMembers from './TeamMembers.js';\n\nconst Team = ({ team }) => {\n  return (\n    team\n      ? <div className=\"Team\">\n          <h3>{team.name}</h3>\n          <p>Project Description: {team.description}</p>\n          <TeamMembers collaborators={team.collaborators} />\n        </div>\n      : <h3>...No Team Here...</h3>\n  )\n}\n\nexport default Team","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst SideTeams = ({ teams, deleteTeam }) => {\n\n  const handleDeleteClick = team => {\n    deleteTeam(team)\n  }\n\n  const teamLinks = teams.map ( team => (\n    <li key={team.id}><Link key={team.id} to={`/teams/${team.id}`}>{team.name}</Link><button onClick={() => handleDeleteClick(team)} className=\"delete\">Delete</button></li>\n  ))\n\n  return(\n    <div className=\"SideBar\">\n    <h4>List of Teams </h4>\n      <ul>{teamLinks}</ul>\n    </div>\n  )\n}\n\n\nexport default SideTeams","import React from 'react';\nimport Team from '../components/Team.js';\nimport SideTeams from '../components/SideTeams.js';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { deleteTeam } from '../actions/teams';\n\nclass TeamsContainer extends React.Component {\n  render() {\n    return (\n      <div className=\"TeamsContainer\">\n        <SideTeams teams={this.props.teams} deleteTeam={this.props.deleteTeam}/>\n\n        <Switch>\n          <Route exact path=\"/teams/:id\" render={ routerProps => {\n            const team = this.props.teams.find(team => team.id === parseInt(routerProps.match.params.id))\n            return <Team {...routerProps} team={team}/>\n          }}/>\n        </Switch>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ teams }) => ({ teams })\n\nexport default connect(mapStateToProps,{deleteTeam})(TeamsContainer)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createTeamMember } from '../actions/teamMembers';\n\nclass TeamSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {team: null};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  //props are collaborator and availableTeams\n\n  handleChange(e) {\n    this.setState({team: this.props.availableTeams[e.target.value]});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.team) {\n      this.props.createTeamMember(this.props.collaborator,this.state.team)\n      this.setState({team: null})\n    }\n  }\n\n  render() {\n    return (\n      this.props.availableTeams.length\n        ?\n          <div className=\"TeamSelect\">\n            <form value={this.state.team} onSubmit={this.handleSubmit}>\n              <label>\n                Select a Team:\n                <select onChange={this.handleChange}>\n                  <option value={null}>Select a Team</option>\n                  {this.props.availableTeams.map( (team,index) =>\n                    <option key={index} value={index}>\n                      {team.name}\n                    </option>\n                  )}\n                </select>\n              </label>\n              <input type=\"submit\" value=\"Join Team\" />\n            </form>\n          </div>\n        :\n        <div>You're on all the teams</div>\n    )\n  }\n}\n\nexport default connect(null,{createTeamMember})(TeamSelect)","const API = \"https://safe-fjord-18355.herokuapp.com/\"\nconst teamMembersAPI = API + \"team_members/\"\n\nconst addTeamToMember = (collaboratorID,team) => ({ type: \"ADD_TEAM_TO_COLLABORATOR\", collaboratorID, team })\nconst addMemberToTeam = (teamID,collaborator) => ({ type: \"ADD_COLLABORATOR_TO_TEAM\", teamID, collaborator })\n\nexport const createTeamMember = (collaborator,team) => {\n  return dispatch => {\n    const body = {\n      team_id: `${team.id}`,\n      collaborator_id: `${collaborator.id}`\n    }\n    return fetch(teamMembersAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(teamMember => {\n        if (teamMember.error) {\n          alert(teamMember.error)\n        } else {\n          dispatch(addTeamToMember(teamMember.collaborator_id,team))\n          dispatch(addMemberToTeam(teamMember.team_id,collaborator))\n        }\n        return teamMember\n      })\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst MemberTeams = ({ teams }) => {\n  return (\n    teams.length\n      ? <div className=\"MemberTeams\">\n          <p>Teams</p>\n          <ul>{teams.map ( team =>\n            <li key={team.id}>\n              <Link key={team.id} to={`/teams/${team.id}`}>{team.name}</Link>\n            </li>\n          )}</ul>\n        </div>\n      : <h3>...No Teams Yet...</h3>\n  )\n}\n\nexport default MemberTeams","import React from 'react';\nimport TeamSelect from './TeamSelect.js';\nimport MemberTeams from './MemberTeams.js';\n\nconst Collaborator = ({ collaborator, teams }) => {\n\n  return (\n    collaborator\n      ? <div className=\"Collaborator\">\n          <h3>{collaborator.name}</h3>\n          <p>Primary Role: {collaborator.role}</p>\n          <p>Skills: {collaborator.skills}</p>\n          <MemberTeams teams={collaborator.teams} />\n          <TeamSelect collaborator={collaborator} availableTeams={teams.filter(({ name: id1 }) => !collaborator.teams.some(({ name: id2 }) => id2 === id1))}/>\n        </div>\n      : <h3>...No Collaborator Here...</h3>\n  )\n}\n\nexport default Collaborator","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SideCollabos = ({ collaborators, deleteCollaborator }) => {\n\n  const handleDeleteClick = collaborator => {\n    deleteCollaborator(collaborator)\n  }\n\n  const collaboratorLinks = collaborators.map ( collaborator => (\n    <li key={collaborator.id}><Link key={collaborator.id} to={`/collaborators/${collaborator.id}`}>{collaborator.name}</Link><button onClick={() => handleDeleteClick(collaborator)} className=\"delete\">Delete</button></li>\n  ))\n\n  return(\n    <div className=\"SideBar\">\n    <h4>List of Collaborators</h4>\n      <ul>{collaboratorLinks}</ul>\n    </div>\n  )\n}\n\n\nexport default SideCollabos","import React from 'react';\nimport Collaborator from '../components/Collaborator.js';\nimport SideCollabos from '../components/SideCollabos.js';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { deleteCollaborator } from '../actions/collaborators';\n\nclass CollaboratorsContainer extends React.Component {\n  state = {\n    count: 0\n  }\n\n  handleOnClick = () => {\n\n    const API = \"http://localhost:3000/\"\n    const collaboratorsAPI = API + \"collaborators/\"\n\n    fetch(collaboratorsAPI)\n      .then(resp => {\n        return resp.json();\n      })\n      .then(data => console.log('c', data))\n      .catch(errors => console.log('d', errors))\n      \n    \n    console.log('e');\n\n\n    // a, e, b, c\n  }\n\n  render() {\n    return (\n      <div className=\"CollaboratorsContainer\">\n        <SideCollabos collaborators={this.props.collaborators} deleteCollaborator={this.props.deleteCollaborator} />\n\n        <Switch>\n          <Route exact path=\"/collaborators/:id\" render={ routerProps => {\n            const collaborator = this.props.collaborators.find(collaborator => collaborator.id === parseInt(routerProps.match.params.id))\n            return <Collaborator {...routerProps} collaborator={collaborator} teams={this.props.teams}/>\n          }}/>\n        </Switch>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ collaborators, teams }) => ({ collaborators, teams })\n\nexport default connect(mapStateToProps,{deleteCollaborator})(CollaboratorsContainer)","import React, { Component } from 'react';\nimport NavBar from './components/NavBar.js';\nimport About from './components/About.js';\nimport NewTeam from './components/NewTeam';\nimport NewCollaborator from './components/NewCollaborator.js';\nimport TeamsContainer from './containers/TeamsContainer';\nimport CollaboratorsContainer from './containers/CollaboratorsContainer';\nimport { connect } from 'react-redux';\nimport { fetchCollaborators } from './actions/collaborators';\nimport { fetchTeams } from './actions/teams';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.fetchCollaborators()\n    this.props.fetchTeams()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Hackathon Teamup</h1>\n        <NavBar />\n        <Switch>\n          <Route exact from=\"/\" component={About} />\n          <Route exact path=\"/newTeam\" component={NewTeam}/>\n          <Route exact path=\"/newCollaborator\" component={NewCollaborator}/>\n          <Route path=\"/collaborators\" component={CollaboratorsContainer}/>\n          <Route path=\"/teams\" component={TeamsContainer}/>\n          \n        </Switch>\n      </div>\n    );\n  }\n}\n\n \nexport default connect(null,{ fetchCollaborators, fetchTeams })(App)","import { combineReducers } from 'redux'\nimport teams from \"./teams\"\nimport collaborators from \"./collaborators\"\n\nexport default combineReducers({\n  teams,\n  collaborators\n})","export default (state=[], action) => {\n  let idx;\n  let collaborators = [];\n  let teams = [];\n  switch (action.type) {\n    case \"LOAD_TEAMS\":\n      return action.teams\n    case \"ADD_TEAM\":\n      return state.concat(action.team)\n    case \"DELETE_TEAM\":\n      return state.filter(team => team !== action.team)\n    case \"ADD_COLLABORATOR_TO_TEAM\":\n      idx = state.findIndex(team => team.id  === action.teamID);\n      collaborators = state[idx].collaborators;\n      return [\n        ...state.slice(0, idx),\n        {\n           ...state[idx],\n           collaborators: [...collaborators, action.collaborator],\n        },\n        ...state.slice(idx + 1),\n     ]\n    case \"DELETE_COLLABORATOR_FROM_TEAMS\":\n      teams = state\n      teams.forEach(team=>\n        team.collaborators = team.collaborators.filter(collaborator=> collaborator.id !== action.collaborator.id)\n        )\n      return teams\n    default:\n      return state\n  }\n}","export default (state=[], action) => {\n  let idx;\n  let teams = [];\n  let collaborators = [];\n  switch (action.type) {\n    case \"LOAD_COLLABORATORS\":\n      return action.collaborators\n    case \"ADD_COLLABORATOR\":\n      return state.concat(action.collaborator)\n    case \"DELETE_COLLABORATOR\":\n      return state.filter(collaborator => collaborator !== action.collaborator)\n    case \"ADD_TEAM_TO_COLLABORATOR\":\n      idx = state.findIndex(collaborator => collaborator.id  === action.collaboratorID);\n      teams = state[idx].teams;\n      return [\n        ...state.slice(0, idx),\n        {\n           ...state[idx],\n           teams: [...teams, action.team],\n        },\n        ...state.slice(idx + 1),\n     ]\n     case \"DELETE_TEAM_FROM_COLLABORATORS\":\n      collaborators = state\n      collaborators.forEach(collaborator=>\n        collaborator.teams = collaborator.teams.filter(team=> team.id !== action.team.id)\n        )\n      return collaborators\n    default:\n      return state\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from \"./reducers/rootReducer.js\"\nimport * as serviceWorker from './serviceWorker';\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}